# transform metab from ID to HMDB numbers
logFC_PEA_metab_z <- logFC_PEA_metab_z %>%
rownames_to_column(var= "ID")
logFC_PEA_metab_z <- merge(logFC_PEA_metab_z, Biocrates_metabolite_identifier, by.x = "ID", by.y = "feature")
logFC_PEA_metab_z <- logFC_PEA_metab_z[,-c(6:8)]
logFC_PEA_metab_z <- logFC_PEA_metab_z %>%
mutate(HMDB = strsplit(as.character(HMDB), "/")) %>%
unnest(HMDB) %>%
filter(HMDB != "") %>%
unique()
# average if metabolites have same HMDB number
# so there is only one HMDB as input
logFC_PEA_metab_z <- logFC_PEA_metab_z[,c(6,2:5)]
logFC_PEA_metab_z <- logFC_PEA_metab_z %>%
group_by(HMDB) %>%
summarise_each(funs(mean))
# now rownames can be annotated
logFC_PEA_metab_z <- logFC_PEA_metab_z %>%
column_to_rownames("HMDB")
# NAs needs to be removed and input in matrix form
logFC_PEA_metab_z <- logFC_PEA_metab_z %>%
drop_na() %>%
as.matrix()
logFC_PEA_prot_MTBE_z <- logFC_PEA_prot_MTBE_z %>%
drop_na() %>%
as.matrix()
logFC_PEA_prot_autoSP3_z <- logFC_PEA_prot_autoSP3_z %>%
drop_na() %>%
as.matrix()
test <- logFC_PEA_metab_z
test[c(1:895), c(1:4)] <- as.numeric(1)
# now the inputs are all in the right format
## combined prot_MTBE with metab and prot_autoSP3 with metab
combined_MTBE <- rbind(logFC_PEA_metab_z, logFC_PEA_prot_MTBE_z)
combined_autoSP3 <- rbind(logFC_PEA_metab_z, logFC_PEA_prot_autoSP3_z)
View(combined_MTBE)
# MTBE
norm_wmean_combined_MTBE <- run_wmean(mat = combined_MTBE, net = network_combined, .source = "term", .target = "feature", .mor="mor")
norm_wmean_combined_MTBE <- norm_wmean_combined_MTBE %>%
filter(statistic == 'norm_wmean')
# autoSP3
norm_wmean_combined_autoSP3 <- run_wmean(mat = combined_autoSP3, net = network_combined, .source = "term", .target = "feature", .mor="mor")
norm_wmean_combined_autoSP3 <- norm_wmean_combined_autoSP3 %>%
filter(statistic == 'norm_wmean')
View(norm_wmean_combined_autoSP3)
View(norm_wmean_combined_autoSP3)
View(norm_wmean_combined_MTBE)
View(norm_wmean_combined_autoSP3)
View(norm_wmean_combined_autoSP3)
# corr matrix annotation
test <- paste(norm_wmean_combined_autoSP3$source, norm_wmean_combined_autoSP3$source, sep =" - ")
View(test)
test
# corr matrix annotation
test <- paste(norm_wmean_combined_autoSP3$source, norm_wmean_combined_autoSP3$condition, sep =" - ")
test
# corr matrix annotation
anno <- paste(gsub(" ", "_" , norm_wmean_combined_autoSP3$source), norm_wmean_combined_autoSP3$condition, sep =" - ")
anno
# corr matrix annotation
anno <- paste(gsub(" ", "_" , norm_wmean_combined_autoSP3$source), norm_wmean_combined_autoSP3$condition, sep ="_")
anno
# correlation between the resulting scores of MTBE and autoSP3
cor(norm_wmean_combined_autoSP3$score, norm_wmean_combined_MTBE$score)
cor(norm_wmean_combined_autoSP3$score, norm_wmean_combined_MTBE$score)
?cor
# correlation between the resulting scores of MTBE and autoSP3
cor(norm_wmean_combined_autoSP3$score, norm_wmean_combined_MTBE$score, method = c("pearson", "spearman"))
# correlation between the resulting scores of MTBE and autoSP3
cor(norm_wmean_combined_autoSP3$score, norm_wmean_combined_MTBE$score, method = c("pearson", "spearman"))
# correlation between the resulting scores of MTBE and autoSP3
cor(norm_wmean_combined_autoSP3$score, norm_wmean_combined_MTBE$score, method ="spearman")
cor(norm_wmean_combined_autoSP3$score, norm_wmean_combined_MTBE$score, method ="pearson")
cor(norm_wmean_combined_autoSP3$score, norm_wmean_combined_MTBE$score, method ="spearman")
cor(norm_wmean_combined_autoSP3$score, norm_wmean_combined_MTBE$score, method ="pearson")
View(network_combined)
View(norm_wmean_combined_MTBE)
# create matrix with pathway as rows and samples in columns
d <- norm_wmean_combined_MTBE %>%
group_by(condition)
View(d)
# create matrix with pathway as rows and samples in columns
d <- norm_wmean_combined_MTBE %>%
order(conditoin)
# create matrix with pathway as rows and samples in columns
d <- norm_wmean_combined_MTBE %>%
order(condition)
# create matrix with pathway as rows and samples in columns
d <- norm_wmean_combined_MTBE %>%
sort(condition)
# create matrix with pathway as rows and samples in columns
d <- norm_wmean_combined_MTBE[,c(2:4)]
d <- table(d)
View(d)
# create matrix with pathway as rows and samples in columns
d <- norm_wmean_combined_MTBE[,c(2:4)]
View(d)
d <- d %>%
group_by(source, condition)
View(d)
# create matrix with pathway as rows and samples in columns
d <- norm_wmean_combined_MTBE[,c(3,2,4)]
d <- d %>%
group_by(condition, source)
d <- d[order(d[, "condition"])]
d <- d[order(d[, "condition"]),]
summary(d)
# create matrix with pathway as rows and samples in columns
d <- norm_wmean_combined_MTBE[,c(3,2,4)]
d <  pivot_wider(d, names_from = condition, values_from = score )
d <- pivot_wider(d, names_from = condition, values_from = score )
View(d)
# create matrix with pathway as rows and samples in columns
d <- norm_wmean_combined_MTBE[,c(3,2,4)]
d <- pivot_wider(d, names_from = condition, values_from = score )
View(d)
View(norm_wmean_combined_MTBE)
# create matrix with pathway as rows and samples in columns
corr_matrix <- norm_wmean_combined_MTBE[,c(3,2,4)]
corr_matrix<- pivot_wider(d, names_from = condition, values_from = score )
# create matrix with pathway as rows and samples in columns
corr_matrix <- norm_wmean_combined_MTBE[,c(3,2,4)]
corr_matrix_MTBE <- norm_wmean_combined_MTBE[,c(3,2,4)]
corr_matrix_MTBE <- pivot_wider(corr_matrix, names_from = condition, values_from = score )
View(corr_matrix_MTBE)
# create matrix with pathway as rows and samples in columns
corr_matrix_MTBE <- norm_wmean_combined_MTBE[,c(3,2,4)]
corr_matrix_MTBE <- pivot_wider(corr_matrix_MTBE, names_from = condition, values_from = score )
corr_matrix_autoSP3 <- norm_wmean_combined_autoSP3[,c(3,2,4)]
corr_matrix_autoSP3 <- pivot_wider(corr_matrix_autoSP3, names_from = condition, values_from = score )
48 * 3
View(corr_matrix_MTBE)
View(norm_wmean_combined_MTBE)
temp <- norm_wmean_combined_MTBE[seq(0,192, 4),]
View(temp)
48 * 4
# create matrix with pathway as rows and samples in columns
corr_matrix_MTBE <- norm_wmean_combined_MTBE[,c(3,2,4)]
corr_matrix_MTBE <- pivot_wider(corr_matrix_MTBE, names_from = condition, values_from = score )
corr_matrix_autoSP3 <- norm_wmean_combined_autoSP3[,c(3,2,4)]
corr_matrix_autoSP3 <- pivot_wider(corr_matrix_autoSP3, names_from = condition, values_from = score )
View(corr_matrix_MTBE)
corr_matrix_MTBE <- corr_matrix_MTBE %>%
column_to_rownames("source")
corr_matrix_autoSP3 <- corr_matrix_autoSP3 %>%
column_to_rownames("source")
View(corr_matrix_autoSP3)
mapply(cor, corr_matrix_MTBE, corr_matrix_autoSP3)
## correlation sample wise
corr_samples
# create matrix with pathway as rows and samples in columns
corr_matrix_MTBE <- norm_wmean_combined_MTBE[,c(3,2,4)]
corr_matrix_MTBE <- pivot_wider(corr_matrix_MTBE, names_from = condition, values_from = score )
corr_matrix_MTBE <- corr_matrix_MTBE %>%
column_to_rownames("source")
corr_matrix_autoSP3 <- norm_wmean_combined_autoSP3[,c(3,2,4)]
corr_matrix_autoSP3 <- pivot_wider(corr_matrix_autoSP3, names_from = condition, values_from = score )
corr_matrix_autoSP3 <- corr_matrix_autoSP3 %>%
column_to_rownames("source")
corr_samples <- mapply(cor, corr_matrix_MTBE, corr_matrix_autoSP3)
## correlation sample wise
corr_samples
mean()
# create matrix with pathway as rows and samples in columns
corr_matrix_MTBE <- norm_wmean_combined_MTBE[,c(3,2,4)]
corr_matrix_MTBE <- pivot_wider(corr_matrix_MTBE, names_from = condition, values_from = score )
corr_matrix_MTBE <- corr_matrix_MTBE %>%
column_to_rownames("source")
corr_matrix_autoSP3 <- norm_wmean_combined_autoSP3[,c(3,2,4)]
corr_matrix_autoSP3 <- pivot_wider(corr_matrix_autoSP3, names_from = condition, values_from = score )
corr_matrix_autoSP3 <- corr_matrix_autoSP3 %>%
column_to_rownames("source")
corr_samples <- mapply(cor("pearson"), corr_matrix_MTBE, corr_matrix_autoSP3)
# create matrix with pathway as rows and samples in columns
corr_matrix_MTBE <- norm_wmean_combined_MTBE[,c(3,2,4)]
corr_matrix_MTBE <- pivot_wider(corr_matrix_MTBE, names_from = condition, values_from = score )
corr_matrix_MTBE <- corr_matrix_MTBE %>%
column_to_rownames("source")
corr_matrix_autoSP3 <- norm_wmean_combined_autoSP3[,c(3,2,4)]
corr_matrix_autoSP3 <- pivot_wider(corr_matrix_autoSP3, names_from = condition, values_from = score )
corr_matrix_autoSP3 <- corr_matrix_autoSP3 %>%
column_to_rownames("source")
corr_samples <- mapply(cor(., ., "pearson"), corr_matrix_MTBE, corr_matrix_autoSP3)
corr_samples <- mapply(cor, corr_matrix_MTBE, corr_matrix_autoSP3, "spearson")
corr_samples <- cor(corr_matrix_MTBE, corr_matrix_autoSP3)
## correlation sample wise
corr_samples
corr_samples <- diag(cor(corr_matrix_MTBE, corr_matrix_autoSP3))
## correlation sample wise
corr_samples
corr_samples <- mapply(cor,corr_matrix_MTBE, corr_matrix_autoSP3)
## correlation sample wise
corr_samples
corr_samples <- diag(cor,corr_matrix_MTBE, corr_matrix_autoSP3, method= "pearson")
# create matrix with pathway as rows and samples in columns
corr_matrix_MTBE <- norm_wmean_combined_MTBE[,c(3,2,4)]
corr_matrix_MTBE <- pivot_wider(corr_matrix_MTBE, names_from = condition, values_from = score )
corr_matrix_MTBE <- corr_matrix_MTBE %>%
column_to_rownames("source")
corr_matrix_autoSP3 <- norm_wmean_combined_autoSP3[,c(3,2,4)]
corr_matrix_autoSP3 <- pivot_wider(corr_matrix_autoSP3, names_from = condition, values_from = score )
corr_matrix_autoSP3 <- corr_matrix_autoSP3 %>%
column_to_rownames("source")
corr_samples <- diag(cor,corr_matrix_MTBE, corr_matrix_autoSP3, method= "pearson")
# create matrix with pathway as rows and samples in columns
corr_matrix_MTBE <- norm_wmean_combined_MTBE[,c(3,2,4)]
corr_matrix_MTBE <- pivot_wider(corr_matrix_MTBE, names_from = condition, values_from = score )
corr_matrix_MTBE <- corr_matrix_MTBE %>%
column_to_rownames("source")
corr_matrix_autoSP3 <- norm_wmean_combined_autoSP3[,c(3,2,4)]
corr_matrix_autoSP3 <- pivot_wider(corr_matrix_autoSP3, names_from = condition, values_from = score )
corr_matrix_autoSP3 <- corr_matrix_autoSP3 %>%
column_to_rownames("source")
corr_samples <- diag(cor,corr_matrix_MTBE, corr_matrix_autoSP3, method= "pearson")
corr_samples <- diag(cor(corr_matrix_MTBE, corr_matrix_autoSP3, method= "pearson"))
## correlation sample wise
corr_samples
apply(corr_samples, mean)
sapply(corr_samples, mean)
## correlation sample wise
corr_samples
corr_samplestypeof())
typeof(corr_samples)
mean(corr_samples)
cor(norm_wmean_combined_autoSP3$score, norm_wmean_combined_MTBE$score, method ="pearson")
mean(corr_samples)
# create matrix with pathway as rows and samples in columns
corr_matrix_MTBE <- norm_wmean_combined_MTBE[,c(3,2,4)]
corr_matrix_MTBE <- pivot_wider(corr_matrix_MTBE, names_from = condition, values_from = score )
corr_matrix_MTBE <- corr_matrix_MTBE %>%
column_to_rownames("source")
corr_matrix_autoSP3 <- norm_wmean_combined_autoSP3[,c(3,2,4)]
corr_matrix_autoSP3 <- pivot_wider(corr_matrix_autoSP3, names_from = condition, values_from = score )
corr_matrix_autoSP3 <- corr_matrix_autoSP3 %>%
column_to_rownames("source")
corr_samples <- diag(cor(corr_matrix_MTBE, corr_matrix_autoSP3, method= "pearson"))
## correlation sample wise
corr_samples
mean(corr_samples)
View(corr_matrix_MTBE)
View(corr_matrix_autoSP3)
View(corr_matrix_MTBE)
cor(corr_matrix_MTBE, corr_matrix_autoSP3, method= "pearson")
cor(norm_wmean_combined_autoSP3$score, norm_wmean_combined_MTBE$score, method ="pearson")
mean(corr_samples)
knitr::opts_chunk$set(echo = TRUE)
library(decoupleR)
library(readr)
library(readxl)
library(dplyr)
library(tibble)
library(tidyr)
# network combined
combined_metab_gene_hallmarks <- read_csv("../support/combined_metab_gene_hallmarks.csv")
network_combined <- combined_metab_gene_hallmarks
network_combined$mor <- 1
network_combined$term <- gsub("HALLMARK_","", network_combined$term)
network_combined$term <- gsub("_", " ", network_combined$term)
# network separated
network_met <- network_combined[which(grepl("HMDB", network_combined$feature) == T),]
network_prot <- network_combined[which(grepl("HMDB", network_combined$feature) == F),]
# input for pathway enrichment analysis
logFC_PEA_prot_MTBE_z <- readRDS("../results/single_patient/logFC_PEA_prot_MTBE_z.Rda")
logFC_PEA_prot_autoSP3_z <- readRDS("../results/single_patient/logFC_PEA_prot_autoSP3_z.Rda")
logFC_PEA_metab_z <- readRDS("../results/single_patient/logFC_PEA_metab_z.Rda")
Biocrates_metabolite_identifier <- read_excel("../support/Biocrates_metabolite_identifier.xlsx")
Biocrates_metabolite_identifier$feature <- gsub("[()/: -]",".",Biocrates_metabolite_identifier$feature)
# transform metab from ID to HMDB numbers
logFC_PEA_metab_z <- logFC_PEA_metab_z %>%
rownames_to_column(var= "ID")
logFC_PEA_metab_z <- merge(logFC_PEA_metab_z, Biocrates_metabolite_identifier, by.x = "ID", by.y = "feature")
logFC_PEA_metab_z <- logFC_PEA_metab_z[,-c(6:8)]
logFC_PEA_metab_z <- logFC_PEA_metab_z %>%
mutate(HMDB = strsplit(as.character(HMDB), "/")) %>%
unnest(HMDB) %>%
filter(HMDB != "") %>%
unique()
# average if metabolites have same HMDB number
# so there is only one HMDB as input
logFC_PEA_metab_z <- logFC_PEA_metab_z[,c(6,2:5)]
logFC_PEA_metab_z <- logFC_PEA_metab_z %>%
group_by(HMDB) %>%
summarise_each(funs(mean))
# now rownames can be annotated
logFC_PEA_metab_z <- logFC_PEA_metab_z %>%
column_to_rownames("HMDB")
# NAs needs to be removed and input in matrix form
logFC_PEA_metab_z <- logFC_PEA_metab_z %>%
drop_na() %>%
as.matrix()
logFC_PEA_prot_MTBE_z <- logFC_PEA_prot_MTBE_z %>%
drop_na() %>%
as.matrix()
logFC_PEA_prot_autoSP3_z <- logFC_PEA_prot_autoSP3_z %>%
drop_na() %>%
as.matrix()
test <- logFC_PEA_metab_z
test[c(1:895), c(1:4)] <- as.numeric(1)
# now the inputs are all in the right format
## combined prot_MTBE with metab and prot_autoSP3 with metab
combined_MTBE <- rbind(logFC_PEA_metab_z, logFC_PEA_prot_MTBE_z)
combined_autoSP3 <- rbind(logFC_PEA_metab_z, logFC_PEA_prot_autoSP3_z)
# MTBE
norm_wmean_combined_MTBE <- run_wmean(mat = combined_MTBE, net = network_combined, .source = "term", .target = "feature", .mor="mor")
norm_wmean_combined_MTBE <- norm_wmean_combined_MTBE %>%
filter(statistic == 'norm_wmean')
# autoSP3
norm_wmean_combined_autoSP3 <- run_wmean(mat = combined_autoSP3, net = network_combined, .source = "term", .target = "feature", .mor="mor")
norm_wmean_combined_autoSP3 <- norm_wmean_combined_autoSP3 %>%
filter(statistic == 'norm_wmean')
# create matrix with pathway as rows and samples in columns
corr_matrix_MTBE <- norm_wmean_combined_MTBE[,c(3,2,4)]
corr_matrix_MTBE <- pivot_wider(corr_matrix_MTBE, names_from = condition, values_from = score )
corr_matrix_MTBE <- corr_matrix_MTBE %>%
column_to_rownames("source")
corr_matrix_autoSP3 <- norm_wmean_combined_autoSP3[,c(3,2,4)]
corr_matrix_autoSP3 <- pivot_wider(corr_matrix_autoSP3, names_from = condition, values_from = score )
corr_matrix_autoSP3 <- corr_matrix_autoSP3 %>%
column_to_rownames("source")
corr_samples <- diag(cor(corr_matrix_MTBE, corr_matrix_autoSP3, method= "pearson"))
## correlation sample wise
corr_samples
mean(corr_samples)
# correlation between the resulting scores of MTBE and autoSP3
cor(norm_wmean_combined_autoSP3$score, norm_wmean_combined_MTBE$score, method ="pearson")
# metab
norm_wmean_metab_sep <- run_wmean(mat = logFC_PEA_metab_z, net = network_combined, .source = "term", .target = "feature", .mor="mor")
norm_wmean_metab <- norm_wmean_metab %>%
filter(statistic == 'norm_wmean')
knitr::opts_chunk$set(echo = TRUE)
library(decoupleR)
library(readr)
library(readxl)
library(dplyr)
library(tibble)
library(tidyr)
# network combined
combined_metab_gene_hallmarks <- read_csv("../support/combined_metab_gene_hallmarks.csv")
network_combined <- combined_metab_gene_hallmarks
network_combined$mor <- 1
network_combined$term <- gsub("HALLMARK_","", network_combined$term)
network_combined$term <- gsub("_", " ", network_combined$term)
# network separated
network_met <- network_combined[which(grepl("HMDB", network_combined$feature) == T),]
network_prot <- network_combined[which(grepl("HMDB", network_combined$feature) == F),]
# input for pathway enrichment analysis
logFC_PEA_prot_MTBE_z <- readRDS("../results/single_patient/logFC_PEA_prot_MTBE_z.Rda")
logFC_PEA_prot_autoSP3_z <- readRDS("../results/single_patient/logFC_PEA_prot_autoSP3_z.Rda")
logFC_PEA_metab_z <- readRDS("../results/single_patient/logFC_PEA_metab_z.Rda")
Biocrates_metabolite_identifier <- read_excel("../support/Biocrates_metabolite_identifier.xlsx")
Biocrates_metabolite_identifier$feature <- gsub("[()/: -]",".",Biocrates_metabolite_identifier$feature)
# transform metab from ID to HMDB numbers
logFC_PEA_metab_z <- logFC_PEA_metab_z %>%
rownames_to_column(var= "ID")
logFC_PEA_metab_z <- merge(logFC_PEA_metab_z, Biocrates_metabolite_identifier, by.x = "ID", by.y = "feature")
logFC_PEA_metab_z <- logFC_PEA_metab_z[,-c(6:8)]
logFC_PEA_metab_z <- logFC_PEA_metab_z %>%
mutate(HMDB = strsplit(as.character(HMDB), "/")) %>%
unnest(HMDB) %>%
filter(HMDB != "") %>%
unique()
# average if metabolites have same HMDB number
# so there is only one HMDB as input
logFC_PEA_metab_z <- logFC_PEA_metab_z[,c(6,2:5)]
logFC_PEA_metab_z <- logFC_PEA_metab_z %>%
group_by(HMDB) %>%
summarise_each(funs(mean))
# now rownames can be annotated
logFC_PEA_metab_z <- logFC_PEA_metab_z %>%
column_to_rownames("HMDB")
# NAs needs to be removed and input in matrix form
logFC_PEA_metab_z <- logFC_PEA_metab_z %>%
drop_na() %>%
as.matrix()
logFC_PEA_prot_MTBE_z <- logFC_PEA_prot_MTBE_z %>%
drop_na() %>%
as.matrix()
logFC_PEA_prot_autoSP3_z <- logFC_PEA_prot_autoSP3_z %>%
drop_na() %>%
as.matrix()
test <- logFC_PEA_metab_z
test[c(1:895), c(1:4)] <- as.numeric(1)
# now the inputs are all in the right format
## combined prot_MTBE with metab and prot_autoSP3 with metab
combined_MTBE <- rbind(logFC_PEA_metab_z, logFC_PEA_prot_MTBE_z)
combined_autoSP3 <- rbind(logFC_PEA_metab_z, logFC_PEA_prot_autoSP3_z)
# MTBE
norm_wmean_combined_MTBE <- run_wmean(mat = combined_MTBE, net = network_combined, .source = "term", .target = "feature", .mor="mor")
norm_wmean_combined_MTBE <- norm_wmean_combined_MTBE %>%
filter(statistic == 'norm_wmean')
# autoSP3
norm_wmean_combined_autoSP3 <- run_wmean(mat = combined_autoSP3, net = network_combined, .source = "term", .target = "feature", .mor="mor")
norm_wmean_combined_autoSP3 <- norm_wmean_combined_autoSP3 %>%
filter(statistic == 'norm_wmean')
# create matrix with pathway as rows and samples in columns
corr_matrix_MTBE <- norm_wmean_combined_MTBE[,c(3,2,4)]
corr_matrix_MTBE <- pivot_wider(corr_matrix_MTBE, names_from = condition, values_from = score )
corr_matrix_MTBE <- corr_matrix_MTBE %>%
column_to_rownames("source")
corr_matrix_autoSP3 <- norm_wmean_combined_autoSP3[,c(3,2,4)]
corr_matrix_autoSP3 <- pivot_wider(corr_matrix_autoSP3, names_from = condition, values_from = score )
corr_matrix_autoSP3 <- corr_matrix_autoSP3 %>%
column_to_rownames("source")
corr_samples <- diag(cor(corr_matrix_MTBE, corr_matrix_autoSP3, method= "pearson"))
## correlation sample wise
corr_samples
mean(corr_samples)
# correlation between the resulting scores of MTBE and autoSP3
cor(norm_wmean_combined_autoSP3$score, norm_wmean_combined_MTBE$score, method ="pearson")
# metab
norm_wmean_metab_sep <- run_wmean(mat = logFC_PEA_metab_z, net = network_combined, .source = "term", .target = "feature", .mor="mor")
norm_wmean_metab_sep <- norm_wmean_metab_sep %>%
filter(statistic == 'norm_wmean')
# prot
norm_wmean_prot_MTBE_sep <- run_wmean(mat = logFC_PEA_prot_MTBE_z, net = network_combined, .source = "term", .target = "feature", .mor="mor")
norm_wmean_prot_MTBE_sep <- norm_wmean_prot_MTBE_sep %>%
filter(statistic == 'norm_wmean')
norm_wmean_prot_autoSP3_sep <- run_wmean(mat = logFC_PEA_prot_autoSP3_z, net = network_combined, .source = "term", .target = "feature", .mor="mor")
norm_wmean_prot_autoSP3_sep <- norm_wmean_prot_autoSP3_sep %>%
filter(statistic == 'norm_wmean')
source("~/GitHub/prot_met_workflow/scripts/SMARTCARE_decoupleR_sample_preparation.R", echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(decoupleR)
library(readr)
library(readxl)
library(dplyr)
library(tibble)
library(tidyr)
# network combined
combined_metab_gene_hallmarks <- read_csv("../support/combined_metab_gene_hallmarks.csv")
network_combined <- combined_metab_gene_hallmarks
network_combined$mor <- 1
network_combined$term <- gsub("HALLMARK_","", network_combined$term)
network_combined$term <- gsub("_", " ", network_combined$term)
# network separated
network_met <- network_combined[which(grepl("HMDB", network_combined$feature) == T),]
network_prot <- network_combined[which(grepl("HMDB", network_combined$feature) == F),]
# input for pathway enrichment analysis
logFC_PEA_prot_MTBE_z <- readRDS("../results/single_patient/logFC_PEA_prot_MTBE_z.Rda")
logFC_PEA_prot_autoSP3_z <- readRDS("../results/single_patient/logFC_PEA_prot_autoSP3_z.Rda")
logFC_PEA_metab_z <- readRDS("../results/single_patient/logFC_PEA_metab_z.Rda")
Biocrates_metabolite_identifier <- read_excel("../support/Biocrates_metabolite_identifier.xlsx")
Biocrates_metabolite_identifier$feature <- gsub("[()/: -]",".",Biocrates_metabolite_identifier$feature)
# transform metab from ID to HMDB numbers
logFC_PEA_metab_z <- logFC_PEA_metab_z %>%
rownames_to_column(var= "ID")
logFC_PEA_metab_z <- merge(logFC_PEA_metab_z, Biocrates_metabolite_identifier, by.x = "ID", by.y = "feature")
logFC_PEA_metab_z <- logFC_PEA_metab_z[,-c(6:8)]
logFC_PEA_metab_z <- logFC_PEA_metab_z %>%
mutate(HMDB = strsplit(as.character(HMDB), "/")) %>%
unnest(HMDB) %>%
filter(HMDB != "") %>%
unique()
# average if metabolites have same HMDB number
# so there is only one HMDB as input
logFC_PEA_metab_z <- logFC_PEA_metab_z[,c(6,2:5)]
logFC_PEA_metab_z <- logFC_PEA_metab_z %>%
group_by(HMDB) %>%
summarise_each(funs(mean))
# now rownames can be annotated
logFC_PEA_metab_z <- logFC_PEA_metab_z %>%
column_to_rownames("HMDB")
# NAs needs to be removed and input in matrix form
logFC_PEA_metab_z <- logFC_PEA_metab_z %>%
drop_na() %>%
as.matrix()
logFC_PEA_prot_MTBE_z <- logFC_PEA_prot_MTBE_z %>%
drop_na() %>%
as.matrix()
logFC_PEA_prot_autoSP3_z <- logFC_PEA_prot_autoSP3_z %>%
drop_na() %>%
as.matrix()
test <- logFC_PEA_metab_z
test[c(1:895), c(1:4)] <- as.numeric(1)
# now the inputs are all in the right format
## combined prot_MTBE with metab and prot_autoSP3 with metab
combined_MTBE <- rbind(logFC_PEA_metab_z, logFC_PEA_prot_MTBE_z)
combined_autoSP3 <- rbind(logFC_PEA_metab_z, logFC_PEA_prot_autoSP3_z)
# MTBE
norm_wmean_combined_MTBE <- run_wmean(mat = combined_MTBE, net = network_combined, .source = "term", .target = "feature", .mor="mor")
norm_wmean_combined_MTBE <- norm_wmean_combined_MTBE %>%
filter(statistic == 'norm_wmean')
# autoSP3
norm_wmean_combined_autoSP3 <- run_wmean(mat = combined_autoSP3, net = network_combined, .source = "term", .target = "feature", .mor="mor")
norm_wmean_combined_autoSP3 <- norm_wmean_combined_autoSP3 %>%
filter(statistic == 'norm_wmean')
# create matrix with pathway as rows and samples in columns
corr_matrix_MTBE <- norm_wmean_combined_MTBE[,c(3,2,4)]
corr_matrix_MTBE <- pivot_wider(corr_matrix_MTBE, names_from = condition, values_from = score )
corr_matrix_MTBE <- corr_matrix_MTBE %>%
column_to_rownames("source")
corr_matrix_autoSP3 <- norm_wmean_combined_autoSP3[,c(3,2,4)]
corr_matrix_autoSP3 <- pivot_wider(corr_matrix_autoSP3, names_from = condition, values_from = score )
corr_matrix_autoSP3 <- corr_matrix_autoSP3 %>%
column_to_rownames("source")
corr_samples <- diag(cor(corr_matrix_MTBE, corr_matrix_autoSP3, method= "pearson"))
## correlation sample wise
corr_samples
mean(corr_samples)
# correlation between the resulting scores of MTBE and autoSP3
cor(norm_wmean_combined_autoSP3$score, norm_wmean_combined_MTBE$score, method ="pearson")
# metab
norm_wmean_metab_sep <- run_wmean(mat = logFC_PEA_metab_z, net = network_combined, .source = "term", .target = "feature", .mor="mor")
norm_wmean_metab_sep <- norm_wmean_metab_sep %>%
filter(statistic == 'norm_wmean')
# prot
norm_wmean_prot_MTBE_sep <- run_wmean(mat = logFC_PEA_prot_MTBE_z, net = network_combined, .source = "term", .target = "feature", .mor="mor")
norm_wmean_prot_MTBE_sep <- norm_wmean_prot_MTBE_sep %>%
filter(statistic == 'norm_wmean')
norm_wmean_prot_autoSP3_sep <- run_wmean(mat = logFC_PEA_prot_autoSP3_z, net = network_combined, .source = "term", .target = "feature", .mor="mor")
norm_wmean_prot_autoSP3_sep <- norm_wmean_prot_autoSP3_sep %>%
filter(statistic == 'norm_wmean')
