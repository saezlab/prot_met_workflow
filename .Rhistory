nodes_lung<- readRDS("results/nodes_ORA_lung.RData")
dereg_PEA_network <- deregulated_genes_and_metabs[deregulated_genes_and_metabs$feature %in% nodes_lung_full$sucesses, ]
# metab and prot
logFC_proteomics_z <- readRDS("results/logFC_proteomics_z.Rda")
logFC_metabolomics_z <- readRDS("results/logFC_metabolomics_z.Rda")
combined_metab_gene_hallmarks <- read_csv("support/combined_metab_gene_hallmarks.csv")
Biocrates_metabolite_identifier <- read_excel("support/Biocrates_metabolite_identifier.xlsx")
Biocrates_metabolite_identifier$feature <- gsub("[()/: -]",".",Biocrates_metabolite_identifier$feature)
##################################
# limma ttest
##################################
proteomics_t <- readRDS("results/proteomics_DE_t.Rda")
metabolomics_t <- readRDS("results/metabolomics_DE_t.Rda")
proteomics_t <- proteomics_t[,c(3,4, 6, 8 )]
proteomics_t <- proteomics_t[-which(proteomics_t$ID == "NA"),]
proteomics_t<- unique(proteomics_t)
proteomics_t <- proteomics_t %>%
group_by(ID) %>%
summarise_each(funs(mean))
proteomics_t <- proteomics_t %>%
drop_na() %>%
column_to_rownames("ID")
metabolomics_t <- metabolomics_t[,c(12, 3, 5, 7)]
metabolomics_t<- unique(metabolomics_t)
metabolomics_t <- metabolomics_t %>%
group_by(HMDB) %>%
summarise_each(funs(mean))
metabolomics_t <- metabolomics_t %>%
drop_na() %>%
column_to_rownames("HMDB")
######################################################################
combined_t <- rbind(metabolomics_t, proteomics_t)
######################################################################
metabolomics_t <- metabolomics_t %>%
rownames_to_column("HMDB")
metabolomics_t_map <- left_join(metabolomics_t, metabolitesMapping, by = "HMDB" )
metabolomics_t_map <-metabolomics_t_map %>%
select(HMDB, logFC, t, adj.P.Val, Name) %>%
unique()
metabolomics_t_map <- metabolomics_t_map[-which(is.na(metabolomics_t_map$Name) == T), ]
# only 4 HMDBs not annotated, these are:
metabolomics_t$HMDB[which(metabolomics_t$HMDB %in% metabolomics_t_map$HMDB == F)]
# Chunk 4
# format for filter
volc.prot <- proteomics_t
p_cutoff = 0.001
volc.prot <- volc.prot %>%
rename(p.val = "adj.P.Val") %>%
mutate(Regulation =  ifelse(p.val <= p_cutoff & abs(logFC) >=2, ifelse(logFC>2, "up", "down"), "stable")) %>%
rownames_to_column("ID")
volc.prot["significance"] <-  "not significant"
volc.prot[which(volc.prot$p.val < p_cutoff & abs(volc.prot$logFC) < 2 ),"significance"] <- "significant"
volc.prot[which(volc.prot$p.val > p_cutoff & abs(volc.prot$logFC) > 2 ),"significance"] <- "fold-change"
volc.prot[which(volc.prot$p.val < p_cutoff & abs(volc.prot$logFC) > 2 ),"significance"] <- "significant & fold-change"
volc.prot.filter <- volc.prot %>%
filter(significance=="significant & fold-change")
prot.volc <-  ggplot(volc.prot, aes(x = logFC, y = -log10(p.val), col = Regulation, label = ID)) +
geom_point(alpha=0.4, size=2) +
scale_color_manual(values=c("blue", "grey","red")) +
geom_hline(yintercept=-log10(p_cutoff), lty=4,col="black",lwd=0.8) +
geom_vline(xintercept=c(-2,2),lty=4,col="black",lwd=0.8) +
geom_text_repel(data=volc.prot.filter, aes(label=ID), show.legend = F) +
ggtitle("Differentially Expressed Proteins in Lung Cancer") +
xlab("log2(fold change)") +
ylab("-log10 (adj. p-value)") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)
#legend.title = element_blank(),
#legend.text = element_text(size=10),
#legend.key.size = unit(3,"line")
)
prot.volc
pdf("results/plots/volcano_prot.pdf", width = 10)
prot.volc
dev.off()
# Chunk 5
# format for filter
volc.met <- metabolomics_t_map
p_cutoff = 0.001
volc.met <- volc.met %>%
rename(p.val = "adj.P.Val") %>%
mutate(Regulation =  ifelse(p.val <= p_cutoff & abs(logFC) >=1, ifelse(logFC>1, "up", "down"), "stable"))
volc.met["significance"] <-  "not significant"
volc.met[which(volc.met$p.val < p_cutoff & abs(volc.met$logFC) < 1 ),"significance"] <- "significant"
volc.met[which(volc.met$p.val > p_cutoff & abs(volc.met$logFC) > 1 ),"significance"] <- "fold-change"
volc.met[which(volc.met$p.val < p_cutoff & abs(volc.met$logFC) > 1 ),"significance"] <- "significant & fold-change"
volc.met.filter <- volc.met %>%
filter(significance=="significant & fold-change")
met.volc <-  ggplot(volc.met, aes(x = logFC, y = -log10(p.val), col = Regulation, label = Name)) +
geom_point(alpha=0.4, size=2) +
scale_color_manual(values=c("blue", "grey","red")) +
geom_hline(yintercept=-log10(p_cutoff), lty=4,col="black",lwd=0.8) +
geom_vline(xintercept=c(-1,1),lty=4,col="black",lwd=0.8) +
geom_text_repel(data=volc.met.filter, aes(label=Name), show.legend = F) +
ggtitle("Differentially Abundant Metabolites in Lung Cancer") +
xlab("log2(fold change)") +
ylab("-log10(adj. p-value)") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
#legend.position="right",
#legend.title = element_blank()
)
met.volc
pdf("results/plots/volcano_metab.pdf", width = 10)
met.volc
dev.off()
# Chunk 6
combined <- prot.volc + met.volc & theme(legend.position = "right")
combined.volc <- combined + plot_layout(guides = "collect")
combined.volc
pdf("results/plots/volcano_combined.pdf", width = 12)
combined.volc +  plot_annotation(
tag_levels = "A",
tag_suffix = ')'
)
dev.off()
# Chunk 7
volc.prot.x <- proteomics_t
p_cutoff = 0.001
volc.prot.x <- volc.prot.x %>%
rename(p.val = "adj.P.Val") %>%
rownames_to_column("ID")
volc.prot.x$network_appearance <- "not in network"
volc.prot.x$network_appearance[which(volc.prot.x$ID %in% nodes_lung_full[[1]])] <- "network"
volc.prot.x.filter <- volc.prot.x[which(volc.prot.x$ID %in% nodes_lung_full[[1]]), ]
volc.prot.x.filter
prot.volc.x <-  ggplot(volc.prot.x, aes(x = logFC, y = -log10(p.val), col = network_appearance, label = ID)) +
geom_point(alpha=0.4, size=2) +
scale_color_manual(values=c("red","grey")) +
geom_hline(yintercept=-log10(p_cutoff), lty=4,col="black",lwd=0.8) +
geom_vline(xintercept=c(-2,2),lty=4,col="black",lwd=0.8) +
geom_text_repel(data=volc.prot.x.filter, aes(label=ID), show.legend = F) +
ggtitle("Nodes of COSMOS network in Lung Cancer") +
xlab("log2(fold change)") +
ylab("-log10 (adj. p-value)") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)
#legend.title = element_blank(),
#legend.text = element_text(size=10),
#legend.key.size = unit(3,"line")
)
prot.volc.x
# Chunk 8
MYC_deregulated_genes_and_metabs <- deregulated_genes_and_metabs %>%
filter(term == "MYC TARGETS V1")
volc.prot.MYC <- proteomics_t
p_cutoff = 0.01
volc.prot.MYC <- volc.prot.MYC %>%
rename(p.val = "adj.P.Val") %>%
rownames_to_column("ID")
volc.prot.MYC$MYC_targets <- "no target of MYC"
volc.prot.MYC$MYC_targets[which(volc.prot.MYC$ID %in% MYC_deregulated_genes_and_metabs$feature)] <- "MYC target"
##
volc.prot.MYC.filter <- volc.prot.MYC[which(volc.prot.MYC$ID %in% MYC_deregulated_genes_and_metabs$feature), ]
#filter for labeling significant Proteins in MYC pathway
volc.prot.MYC.filter <- volc.prot.MYC.filter %>%
filter(p.val < p_cutoff & abs(logFC) >= 1)
##
prot.volc.MYC <-  ggplot(volc.prot.MYC, aes(x = logFC, y = -log10(p.val), col = MYC_targets, label = ID)) +
geom_point(alpha=0.4, size=2) +
scale_color_manual(values=c("red","grey")) +
geom_hline(yintercept=-log10(p_cutoff), lty=4,col="black",lwd=0.8) +
geom_vline(xintercept=c(-1,1),lty=4,col="black",lwd=0.8) +
geom_text_repel(data=volc.prot.MYC.filter, aes(label=ID), show.legend = F) +
ggtitle("MYC targets in Lung Cancer") +
xlab("log2(fold change)") +
ylab("-log10 (adj. p-value)") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)
#legend.title = element_blank(),
#legend.text = element_text(size=10),
#legend.key.size = unit(3,"line")
)
prot.volc.MYC
############################################################################
############################################################################
MYC_deregulated_genes_and_metabs <- deregulated_genes_and_metabs %>%
filter(term == "MYC TARGETS V1")
volc.met.MYC <- metabolomics_t_map
p_cutoff = 0.01
volc.met.MYC <- volc.met.MYC %>%
rename(p.val = "adj.P.Val")
volc.met.MYC$MYC_targets <- "no target of MYC"
volc.met.MYC$MYC_targets[which(volc.met.MYC$HMDB %in% MYC_deregulated_genes_and_metabs$feature)] <- "MYC target"
###
volc.met.MYC.filter <- volc.met.MYC[which(volc.met.MYC$HMDB %in% MYC_deregulated_genes_and_metabs$feature), ]
#filter for labeling significant metabolites in MYC pathway
#1,4−Butanediamine, N,N'−bis(3−aminopropyl)− is spermine
volc.met.MYC.filter[8, "Name"] <- "Spermine"
##
met.volc.MYC <-  ggplot(volc.met.MYC, aes(x = logFC, y = -log10(p.val), col = MYC_targets, label = Name)) +
geom_point(alpha=0.4, size=2) +
scale_color_manual(values=c("red","grey")) +
geom_text_repel(data=volc.met.MYC.filter, aes(label=Name), show.legend = F) +
ggtitle("MYC targets in Lung Cancer") +
xlab("log2(fold change)") +
ylab("-log10 (adj. p-value)") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)
#legend.title = element_blank(),
#legend.text = element_text(size=10),
#legend.key.size = unit(3,"line")
)
met.volc.MYC
combined_MYC <-  prot.volc.MYC + met.volc.MYC & theme(legend.position = "right")
combined.volc.MYC <- combined_MYC + plot_layout(guides = "collect")
combined.volc.MYC
pdf("results/plots/MYC_targets_volcano_plot.pdf", width = 12)
combined.volc.MYC
dev.off()
# Chunk 9
sessionInfo()
prot.volc.x
MYC_deregulated_genes_and_metabs <- deregulated_genes_and_metabs %>%
filter(term == "MYC TARGETS V1")
volc.prot.MYC <- proteomics_t
p_cutoff = 0.01
volc.prot.MYC <- volc.prot.MYC %>%
rename(p.val = "adj.P.Val") %>%
rownames_to_column("ID")
volc.prot.MYC$MYC_targets <- "no target of MYC"
volc.prot.MYC$MYC_targets[which(volc.prot.MYC$ID %in% MYC_deregulated_genes_and_metabs$feature)] <- "MYC target"
##
volc.prot.MYC.filter <- volc.prot.MYC[which(volc.prot.MYC$ID %in% MYC_deregulated_genes_and_metabs$feature), ]
#filter for labeling significant Proteins in MYC pathway
volc.prot.MYC.filter <- volc.prot.MYC.filter %>%
filter(p.val < p_cutoff & abs(logFC) >= 1)
##
prot.volc.MYC <-  ggplot(volc.prot.MYC, aes(x = logFC, y = -log10(p.val), col = MYC_targets, label = ID)) +
geom_point(alpha=0.4, size=2) +
scale_color_manual(values=c("red","grey")) +
geom_hline(yintercept=-log10(p_cutoff), lty=4,col="black",lwd=0.8) +
geom_vline(xintercept=c(-1,1),lty=4,col="black",lwd=0.8) +
geom_text_repel(data=volc.prot.MYC.filter, aes(label=ID), show.legend = F) +
ggtitle("MYC Targets in Proteomics of Lung Cancer") +
xlab("log2(fold change)") +
ylab("-log10 (adj. p-value)") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)
#legend.title = element_blank(),
#legend.text = element_text(size=10),
#legend.key.size = unit(3,"line")
)
prot.volc.MYC
############################################################################
############################################################################
MYC_deregulated_genes_and_metabs <- deregulated_genes_and_metabs %>%
filter(term == "MYC TARGETS V1")
volc.met.MYC <- metabolomics_t_map
p_cutoff = 0.01
volc.met.MYC <- volc.met.MYC %>%
rename(p.val = "adj.P.Val")
volc.met.MYC$MYC_targets <- "no target of MYC"
volc.met.MYC$MYC_targets[which(volc.met.MYC$HMDB %in% MYC_deregulated_genes_and_metabs$feature)] <- "MYC target"
###
volc.met.MYC.filter <- volc.met.MYC[which(volc.met.MYC$HMDB %in% MYC_deregulated_genes_and_metabs$feature), ]
#filter for labeling significant metabolites in MYC pathway
#1,4−Butanediamine, N,N'−bis(3−aminopropyl)− is spermine
volc.met.MYC.filter[8, "Name"] <- "Spermine"
##
met.volc.MYC <-  ggplot(volc.met.MYC, aes(x = logFC, y = -log10(p.val), col = MYC_targets, label = Name)) +
geom_point(alpha=0.4, size=2) +
scale_color_manual(values=c("red","grey")) +
geom_text_repel(data=volc.met.MYC.filter, aes(label=Name), show.legend = F) +
ggtitle("MYC targets in Metabolomics of Lung Cancer") +
xlab("log2(fold change)") +
ylab("-log10 (adj. p-value)") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)
#legend.title = element_blank(),
#legend.text = element_text(size=10),
#legend.key.size = unit(3,"line")
)
met.volc.MYC
combined_MYC <-  prot.volc.MYC + met.volc.MYC & theme(legend.position = "right")
combined.volc.MYC <- combined_MYC + plot_layout(guides = "collect")
combined.volc.MYC
pdf("results/plots/MYC_targets_volcano_plot.pdf", width = 12)
combined.volc.MYC +  plot_annotation(
tag_levels = "A",
tag_suffix = ')'
)
dev.off()
p1 <- plots_prot[[1]] + ggtitle("Proteomic") +theme(plot.title = element_text(hjust = 0.5))
p2 <- plots_met[[1]] + ggtitle("beebsbebse") +theme(plot.title = element_text(hjust = 0.5))
comb_p <- p1 + p2 & theme(legend.position = "right")
combined.violin <- comb_p + plot_layout(guides = "collect")
#ggtitle("Violin plot of proteomic data in lung cancer")
#ggtitle("Violin plot of metabolomic data in lung cancer")
pdf("../results/plots/Violin_plots_data.pdf", width = 14)
combined.violin +  plot_annotation(
# title = "Violin Plots of Proteomic and Metabolomic Data in Lung Cancer",
tag_levels = "A",
tag_suffix = ')',
# theme = theme(plot.title = element_text(hjust = 0.5))
)
dev.off()
p1 <- plots_prot[[1]] + ggtitle("Distribution of Proteomic Data in Lung Cancer") +theme(plot.title = element_text(hjust = 0.5))
p2 <- plots_met[[1]] + ggtitle("Distribution of Metabolomic Data in Lung Cancer") +theme(plot.title = element_text(hjust = 0.5))
comb_p <- p1 + p2 & theme(legend.position = "right")
combined.violin <- comb_p + plot_layout(guides = "collect")
#ggtitle("Violin plot of proteomic data in lung cancer")
#ggtitle("Violin plot of metabolomic data in lung cancer")
pdf("../results/plots/Violin_plots_data.pdf", width = 14)
combined.violin +  plot_annotation(
tag_levels = "A",
tag_suffix = ')'
)
dev.off()
pca1 <- plots_prot[[2]] + ggtitle("PCA of Proteomic Data in Lung Cancer") +theme(plot.title = element_text(hjust = 0.5))
plots_prot[[2]]
View(plots_prot)
plots_prot[[2]]
pca1 <- plots_prot[[3]] + ggtitle("PCA of Proteomic Data in Lung Cancer") +theme(plot.title = element_text(hjust = 0.5))
plots_prot
plots_prot[[2]]
plot(plots_prot[[2]])
pca1 <- plot(plots_prot[[2]]) + ggtitle("PCA of Proteomic Data in Lung Cancer") +theme(plot.title = element_text(hjust = 0.5))
#Main libraries
library(readr)
library(vsn)
#Support functions also requires
library(ggplot2)
library(reshape)
library(pheatmap)
library(gridExtra)
library(grid)
library(cowplot)
library(ggrepel)
library(hexbin)
library(patchwork)
options(ggrepel.max.overlaps = Inf)
source("support_functions.R")
metabolomics_TUvsNG <- readRDS("../results/metabolomics_TUvsNG.Rda")
proteomics_TUvsNG <- readRDS("../results/proteomics_TUvsNG.Rda")
pca1 <- plot(plots_prot[[2]]) + ggtitle("PCA of Proteomic Data in Lung Cancer") +theme(plot.title = element_text(hjust = 0.5))
plot(plots_prot[[2]])
plot(plots_prot[[2]]) + ggtitle("PCA of Proteomic Data in Lung Cancer") +theme(plot.title = element_text(hjust = 0.5))
pca1 <- plot(plots_prot[[2]]) + ggtitle("PCA of Proteomic Data in Lung Cancer") +theme(plot.title = element_text(hjust = 0.5))
pdf("../results/plots/pca1.pdf")
pca1
pca1 <- plot(plots_prot[[2]]) + ggtitle("PCA of Proteomic Data in Lung Cancer") +theme(plot.title = element_text(hjust = 0.5))
pca1 <- plot(plots_prot[[2]])
pca1 <- plot(plots_prot[[2]])
pdf("../results/plots/pca1.pdf")
pca1
dev.off()
pca1 <- plot(plots_prot[[2]])
pdf("../results/plots/pca1.pdf")
plot(plots_prot[[2]])
dev.off()
pdf("../results/plots/pca1.pdf")
plot(plots_prot[[2]]) + ggtitle("PCA of Proteomic Data in Lung Cancer") +theme(plot.title = element_text(hjust = 0.5))
pdf("../results/plots/pca1.pdf")
plot(plots_prot[[2]]) + ggtitle("PCA of Proteomic Data in Lung Cancer") #+theme(plot.title = element_text(hjust = 0.5))
pdf("../results/plots/pca1.pdf")
plot(plots_prot[[2]]) + ggtitle("PCA of Proteomic Data in Lung Cancer") #+theme(plot.title = element_text(hjust = 0.5))
pdf("../results/plots/pca1.pdf")
plot(plots_prot[[2]]) + ggtitle("PCA of Proteomic Data in Lung Cancer") #+theme(plot.title = element_text(hjust = 0.5))
pdf("../results/plots/pca1.pdf")
plot(plots_prot[[2]]) + ggtitle("PCA of Proteomic Data in Lung Cancer")
pdf("../results/plots/pca_proteomic.pdf")
plot(plots_prot[[2]])
dev.off()
pdf("../results/plots/pca_proteomic.pdf")
plot(plots_met[[2]])
dev.off()
pdf("../results/plots/pca_proteomic.pdf")
plot(plots_prot[[2]])
dev.off()
pdf("../results/plots/pca_metabolomic.pdf")
plot(plots_met[[2]])
dev.off()
View(proteomics_TUvsNG)
signal <- proteomics_TUvsNG
signal <- signal[which(!is.na(signal$logFC)),]
null_model <- pnorm(rnorm(dim(signal)[1]))
plot(sort(null_model), sort(signal$P.Value),xlim = c(1,0), ylim = c(1,0)) #its because of the NAs!!
abline(coef = c(0,1))
set.seed(123)
#make a qqplot
signal <- proteomics_TUvsNG
signal <- signal[which(!is.na(signal$logFC)),]
null_model <- pnorm(rnorm(dim(signal)[1]))
plot(sort(null_model), sort(signal$P.Value),xlim = c(1,0), ylim = c(1,0)) #its because of the NAs!!
abline(coef = c(0,1))
metabolomics_DE_t <- readRDS("../results/metabolomics_DE_t.Rda")
proteomics_DE_t <- readRDS("../results/proteomics_DE_t.Rda")
signal <- proteomics_DE_t
signal <- signal[which(!is.na(signal$logFC)),]
null_model <- pnorm(rnorm(dim(signal)[1]))
plot(sort(null_model), sort(signal$P.Value),xlim = c(1,0), ylim = c(1,0)) #its because of the NAs!!
set.seed(123)
#make a qqplot
signal <- proteomics_DE_t
signal <- signal[which(!is.na(signal$logFC)),]
null_model <- pnorm(rnorm(dim(signal)[1]))
plot(sort(null_model), sort(signal$P.Value),xlim = c(1,0), ylim = c(1,0)) #its because of the NAs!!
abline(coef = c(0,1))
View(signal)
set.seed(123)
#make a qqplot
signal <- proteomics_DE_t
signal <- signal[which(!is.na(signal$logFC)),]
null_model <- pnorm(rnorm(dim(signal)[1]))
plot(sort(null_model), sort(signal$adj.P.Val),xlim = c(1,0), ylim = c(1,0)) #its because of the NAs!!
abline(coef = c(0,1))
set.seed(123)
#make a qqplot
signal <- metabolomics_DE_t
signal <- signal[which(!is.na(signal$logFC)),]
null_model <- pnorm(rnorm(dim(signal)[1]))
plot(sort(null_model), sort(signal$adj.P.Val),xlim = c(1,0), ylim = c(1,0)) #its because of the NAs!!
abline(coef = c(0,1))
set.seed(123)
# prot
signal_p <- proteomics_DE_t
signal_p <- signal_p[which(!is.na(signal_p$logFC)),]
null_model <- pnorm(rnorm(dim(signal_p)[1]))
plot(sort(null_model), sort(signal_p$adj.P.Val),xlim = c(1,0), ylim = c(1,0)) #its because of the NAs!!
abline(coef = c(0,1))
# metab
signal_m <- metabolomics_DE_t
signal_m <- signal_m[which(!is.na(signal_m$logFC)),]
null_model <- pnorm(rnorm(dim(signal_m)[1]))
plot(sort(null_model), sort(signal_m$adj.P.Val),xlim = c(1,0), ylim = c(1,0)) #its because of the NAs!!
abline(coef = c(0,1))
knitr::opts_chunk$set(echo = TRUE)
visNet = carnival_visNet(evis = SIF,
nvis = ATT)
library(CARNIVAL)
visNet = carnival_visNet(evis = SIF,
nvis = ATT)
visNet = carnival_visNet(evis = SIF,
nvis = ATT)
library(visNetwork)
library(readr)
library(CARNIVAL)
ATT <- read_csv("../results/ATT.csv")
SIF <- read_csv("../results/SIF.csv")
visNet = carnival_visNet(evis = SIF,
nvis = ATT)
library(cosmosR)
visNet = carnival_visNet(evis = SIF,
nvis = ATT)
network_plot <- display_node_neighboorhood(central_node = "MAPK14",
sif = SIF_full,
att = ATT_full,
n = 4)
network_plot
visNet = carnival_visNet(evis = SIF,
nvis = ATT)
carnival_visNet(evis = SIF,
nvis = ATT)
network_plot <- display_node_neighboorhood(central_node = 'NFKB1',
sif = SIF_full,
att = ATT_full,
n = 7)
network_plot <- display_node_neighboorhood(sif = SIF_full,
att = ATT_full,
n = 7)
network_plot <- display_node_neighboorhood(sif = SIF_full,
att = ATT_full)
network_plot <- display_node_neighboorhood(central_node = "MAPK14",
sif = SIF_full,
att = ATT_full,
n = 4)
network_plot
network_plot <- display_node_neighboorhood(central_node = "MAPK14",
sif = SIF,
att = ATT,
n = 4)
View(SIF)
network_plot <- display_node_neighboorhood(central_node = "ARG1",
sif = SIF,
att = ATT,
n = 4)
View(ATT)
network_plot <- display_node_neighboorhood(central_node = "CAV1",
sif = SIF,
att = ATT,
n = 4)
network_plot <- display_node_neighboorhood(central_node = "CAV1",
sif = SIF,
att = ATT,
n = 2)
network_plot <- display_node_neighboorhood(central_node = "CAV1",
sif = SIF,
att = ATT,
n = 7)
network_plot <- display_node_neighboorhood(central_node = "CAV1",
sif = SIF,
att = ATT,
n = 10)
library(readr)
library(readxl)
library(cosmosR)
library(decoupleR)
library(dplyr)
library(tidyr)
data("meta_network")
meta_network <- meta_network[which(meta_network$source != meta_network$target),]
logFC_metabolomics_z <- readRDS("./results/logFC_metabolomics_z.Rda")
logFC_proteomics_z <- readRDS("./results/logFC_proteomics_z.Rda")
View(logFC_metabolomics_z)
View(logFC_proteomics_z)
View(logFC_metabolomics_z)
View(res_wmean_PEA_sp)
names(logFC_metabolomics_z)
source("~/GitHub/prot_met_workflow/scripts/run_cosmos_single_sample.R", echo=TRUE)
source("~/GitHub/prot_met_workflow/scripts/run_cosmos_single_sample.R", echo=TRUE)
source("~/GitHub/prot_met_workflow/scripts/run_cosmos_single_sample.R", echo=TRUE)
