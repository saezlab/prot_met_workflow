p1
m1 <- ggplot(pathway_select_met, aes(y = reorder(pathway, score), x = score)) +
geom_bar(stat = "identity", fill =colors[1]) +
theme_bw() +
geom_vline(xintercept = 0, linetype = 2) +
theme(axis.text.y = element_text(size = 7),
axis.text.x = element_text(size = 6)) +
ylab("")
m1
comb_ggplot_sep <-  m1 + p1
pm1 <- plot_grid(comb_ggplot_sep, leg1, rel_widths = c(3, .4))  +  plot_annotation(title = "Deregulated pathways in lung cancer (norm_wmean)",
theme = theme(plot.title = element_text(size = 18)) & theme(plot.title = element_text(hjust = 0.5))
)
pm1
pdf("results/plots/norm_wmean_pathway_scores_HALLMARK_seperated.pdf", width = 12, height = 4)
pm1
dev.off()
colors1 <- c("steelblue", "indianred")
ggplot_norm_sep <-  ggplot(pathway_select_sep, aes(y = reorder(pathway, score), x = score, fill = layer)) +
geom_bar(stat = "identity") +
scale_x_continuous(breaks = seq(-8, 12, by= 2)) +
theme_bw() +
geom_vline(xintercept = 0, linetype = 2) +
theme(legen.title = "omic layer"
axis.title = element_text(face = "bold", size = 10),
axis.text.y = element_text(size = 7),
axis.text.x = element_text(size = 6)) +
ylab("") +
scale_fill_manual(values = colors1)
ggplot_norm_sep
leg1 <- get_legend(ggplot_norm_sep)
p1 <- ggplot(pathway_select_prot, aes(y = reorder(pathway, score), x = score)) +
geom_bar(stat = "identity", fill = colors[2])+
theme_bw() +
geom_vline(xintercept = 0, linetype = 2) +
theme(axis.text.y = element_text(size = 7),
axis.text.x = element_text(size = 6)) +
ylab("")
p1
m1 <- ggplot(pathway_select_met, aes(y = reorder(pathway, score), x = score)) +
geom_bar(stat = "identity", fill =colors[1]) +
theme_bw() +
geom_vline(xintercept = 0, linetype = 2) +
theme(axis.text.y = element_text(size = 7),
axis.text.x = element_text(size = 6)) +
ylab("")
m1
comb_ggplot_sep <-  m1 + p1
pm1 <- plot_grid(comb_ggplot_sep, leg1, rel_widths = c(3, .4))  +  plot_annotation(title = "Deregulated pathways in lung cancer (norm_wmean)",
theme = theme(plot.title = element_text(size = 18)) & theme(plot.title = element_text(hjust = 0.5))
)
pm1
pdf("results/plots/norm_wmean_pathway_scores_HALLMARK_seperated.pdf", width = 12, height = 4)
pm1
dev.off()
colors1 <- c("steelblue", "indianred")
ggplot_norm_sep <-  ggplot(pathway_select_sep, aes(y = reorder(pathway, score), x = score, fill = layer)) +
geom_bar(stat = "identity") +
scale_x_continuous(breaks = seq(-8, 12, by= 2)) +
theme_bw() +
geom_vline(xintercept = 0, linetype = 2) +
theme(legend.title = "omic layer"
axis.title = element_text(face = "bold", size = 10),
axis.text.y = element_text(size = 7),
axis.text.x = element_text(size = 6)) +
ylab("") +
scale_fill_manual(values = colors1)
ggplot_norm_sep
leg1 <- get_legend(ggplot_norm_sep)
p1 <- ggplot(pathway_select_prot, aes(y = reorder(pathway, score), x = score)) +
geom_bar(stat = "identity", fill = colors[2])+
theme_bw() +
geom_vline(xintercept = 0, linetype = 2) +
theme(axis.text.y = element_text(size = 7),
axis.text.x = element_text(size = 6)) +
ylab("")
p1
m1 <- ggplot(pathway_select_met, aes(y = reorder(pathway, score), x = score)) +
geom_bar(stat = "identity", fill =colors[1]) +
theme_bw() +
geom_vline(xintercept = 0, linetype = 2) +
theme(axis.text.y = element_text(size = 7),
axis.text.x = element_text(size = 6)) +
ylab("")
m1
comb_ggplot_sep <-  m1 + p1
pm1 <- plot_grid(comb_ggplot_sep, leg1, rel_widths = c(3, .4))  +  plot_annotation(title = "Deregulated pathways in lung cancer (norm_wmean)",
theme = theme(plot.title = element_text(size = 18)) & theme(plot.title = element_text(hjust = 0.5))
)
pm1
pdf("results/plots/norm_wmean_pathway_scores_HALLMARK_seperated.pdf", width = 12, height = 4)
pm1
dev.off()
colors1 <- c("steelblue", "indianred")
ggplot_norm_sep <-  ggplot(pathway_select_sep, aes(y = reorder(pathway, score), x = score, fill = layer)) +
geom_bar(stat = "identity") +
scale_x_continuous(breaks = seq(-8, 12, by= 2)) +
theme_bw() +
geom_vline(xintercept = 0, linetype = 2) +
theme(legend.title = "omic layer",
axis.title = element_text(face = "bold", size = 10),
axis.text.y = element_text(size = 7),
axis.text.x = element_text(size = 6)) +
ylab("") +
scale_fill_manual(values = colors1)
ggplot_norm_sep
leg1 <- get_legend(ggplot_norm_sep)
p1 <- ggplot(pathway_select_prot, aes(y = reorder(pathway, score), x = score)) +
geom_bar(stat = "identity", fill = colors[2])+
theme_bw() +
geom_vline(xintercept = 0, linetype = 2) +
theme(axis.text.y = element_text(size = 7),
axis.text.x = element_text(size = 6)) +
ylab("")
p1
m1 <- ggplot(pathway_select_met, aes(y = reorder(pathway, score), x = score)) +
geom_bar(stat = "identity", fill =colors[1]) +
theme_bw() +
geom_vline(xintercept = 0, linetype = 2) +
theme(axis.text.y = element_text(size = 7),
axis.text.x = element_text(size = 6)) +
ylab("")
m1
comb_ggplot_sep <-  m1 + p1
pm1 <- plot_grid(comb_ggplot_sep, leg1, rel_widths = c(3, .4))  +  plot_annotation(title = "Deregulated pathways in lung cancer (norm_wmean)",
theme = theme(plot.title = element_text(size = 18)) & theme(plot.title = element_text(hjust = 0.5))
)
pm1
pdf("results/plots/norm_wmean_pathway_scores_HALLMARK_seperated.pdf", width = 12, height = 4)
pm1
dev.off()
ggplot_norm_sep <-  ggplot(pathway_select_sep, aes(y = reorder(pathway, score), x = score, fill = layer)) +
geom_bar(stat = "identity") +
scale_x_continuous(breaks = seq(-8, 12, by= 2)) +
theme_bw() +
geom_vline(xintercept = 0, linetype = 2) +
theme(legend.title = "omic layer",
axis.title = element_text(face = "bold", size = 10),
axis.text.y = element_text(size = 7),
axis.text.x = element_text(size = 6)) +
ylab("") +
scale_fill_manual(values = colors1)
ggplot_norm_sep
colors1 <- c("steelblue", "indianred")
ggplot_norm_sep <-  ggplot(pathway_select_sep, aes(y = reorder(pathway, score), x = score, fill = layer)) +
geom_bar(stat = "identity") +
scale_x_continuous(breaks = seq(-8, 12, by= 2)) +
theme_bw() +
geom_vline(xintercept = 0, linetype = 2) +
theme(axis.title = element_text(face = "bold", size = 10),
axis.text.y = element_text(size = 7),
axis.text.x = element_text(size = 6)) +
ylab("") + + guides(fill=guide_legend(title="omic layer")) +
scale_fill_manual(values = colors1)
ggplot_norm_sep
leg1 <- get_legend(ggplot_norm_sep)
p1 <- ggplot(pathway_select_prot, aes(y = reorder(pathway, score), x = score)) +
geom_bar(stat = "identity", fill = colors[2])+
theme_bw() +
geom_vline(xintercept = 0, linetype = 2) +
theme(axis.text.y = element_text(size = 7),
axis.text.x = element_text(size = 6)) +
ylab("")
p1
m1 <- ggplot(pathway_select_met, aes(y = reorder(pathway, score), x = score)) +
geom_bar(stat = "identity", fill =colors[1]) +
theme_bw() +
geom_vline(xintercept = 0, linetype = 2) +
theme(axis.text.y = element_text(size = 7),
axis.text.x = element_text(size = 6)) +
ylab("")
m1
comb_ggplot_sep <-  m1 + p1
pm1 <- plot_grid(comb_ggplot_sep, leg1, rel_widths = c(3, .4))  +  plot_annotation(title = "Deregulated pathways in lung cancer (norm_wmean)",
theme = theme(plot.title = element_text(size = 18)) & theme(plot.title = element_text(hjust = 0.5))
)
pm1
pdf("results/plots/norm_wmean_pathway_scores_HALLMARK_seperated.pdf", width = 12, height = 4)
pm1
dev.off()
colors1 <- c("steelblue", "indianred")
ggplot_norm_sep <-  ggplot(pathway_select_sep, aes(y = reorder(pathway, score), x = score, fill = layer)) +
geom_bar(stat = "identity") +
scale_x_continuous(breaks = seq(-8, 12, by= 2)) +
theme_bw() +
geom_vline(xintercept = 0, linetype = 2) +
theme(axis.title = element_text(face = "bold", size = 10),
axis.text.y = element_text(size = 7),
axis.text.x = element_text(size = 6)) +
ylab("") +
guides(fill=guide_legend(title="omic layer")) +
scale_fill_manual(values = colors1)
ggplot_norm_sep
colors1 <- c("steelblue", "indianred")
ggplot_norm_sep <-  ggplot(pathway_select_sep, aes(y = reorder(pathway, score), x = score, fill = layer)) +
geom_bar(stat = "identity") +
scale_x_continuous(breaks = seq(-8, 12, by= 2)) +
theme_bw() +
geom_vline(xintercept = 0, linetype = 2) +
theme(axis.title = element_text(face = "bold", size = 10),
axis.text.y = element_text(size = 7),
axis.text.x = element_text(size = 6)) +
ylab("") +
guides(fill=guide_legend(title="omic layer")) +
scale_fill_manual(values = colors1)
leg1 <- get_legend(ggplot_norm_sep)
p1 <- ggplot(pathway_select_prot, aes(y = reorder(pathway, score), x = score)) +
geom_bar(stat = "identity", fill = colors[2])+
theme_bw() +
geom_vline(xintercept = 0, linetype = 2) +
theme(axis.text.y = element_text(size = 7),
axis.text.x = element_text(size = 6)) +
ylab("")
p1
m1 <- ggplot(pathway_select_met, aes(y = reorder(pathway, score), x = score)) +
geom_bar(stat = "identity", fill =colors[1]) +
theme_bw() +
geom_vline(xintercept = 0, linetype = 2) +
theme(axis.text.y = element_text(size = 7),
axis.text.x = element_text(size = 6)) +
ylab("")
m1
comb_ggplot_sep <-  m1 + p1
pm1 <- plot_grid(comb_ggplot_sep, leg1, rel_widths = c(3, .4))  +  plot_annotation(title = "Deregulated pathways in lung cancer (norm_wmean)",
theme = theme(plot.title = element_text(size = 18)) & theme(plot.title = element_text(hjust = 0.5))
)
pm1
pdf("results/plots/norm_wmean_pathway_scores_HALLMARK_seperated.pdf", width = 12, height = 4)
pm1
dev.off()
View(deregulated_genes_and_metabs)
View(pathway_select_comb)
# filter manually
dereg_pathway_prot <- pathway_select_prot[c(1,2)]
View(dereg_pathway_prot)
View(pathway_select_prot)
# filter manually
dereg_pathway_prot <- pathway_select_prot[c(1,2,4)]
View(dereg_pathway_prot)
View(pathway_select_met)
View(deregulated_genes_and_metabs)
# filter manually
dereg_pathway_prot <- pathway_select_prot[c(2,1,4)]
dereg_pathway_met <- pathway_select_met[c(2,1,4)]
View(dereg_pathway_met)
# filter manually
dereg_pathway_sep <- rbind(pathway_select_met[c(1,2,4)], pathway_select_prot[c(1,2,4)])
deregulated_genes_and_metabs <- data.frame(matrix(ncol = 2))
colnames(deregulated_genes_and_metabs) <- c("feature", "term", "omic layer")
View(dereg_pathway_sep)
# filter manually
dereg_pathway_met <- pathway_select_met[c(1,2,4)]
dereg_pathway_prot<- pathway_select_prot[c(1,2,4)]
deregulated_metabs <- data.frame(matrix(ncol = 2))
colnames(deregulated_genes_and_metabs) <- c("feature", "term", "omic layer")
deregulated_genes <- data.frame(matrix(ncol = 2))
View(deregulated_genes_and_metabs)
dereg_pathway_met <- pathway_select_met[c(1,2,4)]
dereg_pathway_prot<- pathway_select_prot[c(1,2,4)]
deregulated_metabs <- data.frame(matrix(ncol = 2))
colnames(deregulated_metabs) <- c("feature", "term", "omic layer")
deregulated_genes <- data.frame(matrix(ncol = 2))
colnames(deregulated_genes) <- c("feature", "term", "omic layer")
View(deregulated_genes)
View(network_prot)
# filter manually
dereg_pathway_met <- pathway_select_met[c(1,2,4)]
dereg_pathway_prot<- pathway_select_prot[c(1,2,4)]
deregulated_metabs <- data.frame(matrix(ncol = 2))
colnames(deregulated_metabs) <- c("feature", "term", "omic layer")
deregulated_genes <- data.frame(matrix(ncol = 2))
colnames(deregulated_genes) <- c("feature", "term", "omic layer")
deregulated_metabs <- data.frame(matrix(ncol = 3))
colnames(deregulated_metabs) <- c("feature", "term", "omic layer")
deregulated_genes <- data.frame(matrix(ncol = 3))
colnames(deregulated_genes) <- c("feature", "term", "omic layer")
View(deregulated_metabs)
for (i in 1:length(dereg_pathway_prot)) {
x1 <- network_prot[which(network_prot$term %in% dereg_pathway_prot[i]), c(1,2) ]
deregulated_genes <- rbind(x, x1)
}
View(deregulated_genes)
View(network_prot)
View(deregulated_genes)
View(dereg_pathway_prot)
network_prot[which(network_prot$term %in% dereg_pathway_prot[1]), c(1,2) ]
network_prot[which(network_prot$term %in% dereg_pathway_prot[2]), c(1,2) ]
which(network_prot$term %in% dereg_pathway_prot[2])
View(dereg_pathway_met)
# filter manually
dereg_pathway_met <- pathway_select_met[,1]
View(dereg_pathway_met)
dereg_pathway_met
dereg_pathway_met[1]
dereg_pathway_met[2]
# filter manually
dereg_pathway_met <- pathway_select_met$pathway
# filter manually
dereg_pathway_met <- pathway_select_met$pathway
dereg_pathway_met
dereg_pathway_met <- unlist(dereg_pathway_met)
dereg_pathway_met
dereg_pathway_prot<- pathway_select_prot$pathway
# filter manually
dereg_pathway_met <- pathway_select_met$pathway
dereg_pathway_prot<- pathway_select_prot$pathway
network_prot[which(network_prot$term %in% dereg_pathway_prot[2]), c(1,2) ]
dereg_pathway_met <- pathway_select_met$pathway
dereg_pathway_prot<- pathway_select_prot$pathway
deregulated_metabs <- data.frame(matrix(ncol = 3))
colnames(deregulated_metabs) <- c("feature", "term", "omic layer")
deregulated_genes <- data.frame(matrix(ncol = 3))
colnames(deregulated_genes) <- c("feature", "term", "omic layer")
for (i in 1:length(dereg_pathway_prot)) {
x1 <- network_prot[which(network_prot$term %in% dereg_pathway_prot[i]), c(1,2) ]
deregulated_genes <- rbind(x, x1)
}
View(deregulated_genes)
View(network_prot)
for (i in 1:length(dereg_pathway_prot)) {
x1 <- network_prot[which(network_prot$term %in% dereg_pathway_prot[i]), c(1,2) ]
deregulated_genes <- rbind(deregulated_genes, x1)
}
dereg_pathway_met <- pathway_select_met$pathway
dereg_pathway_prot<- pathway_select_prot$pathway
deregulated_metabs <- data.frame(matrix(ncol = 3))
colnames(deregulated_metabs) <- c("feature", "term", "omic layer")
deregulated_genes <- data.frame(matrix(ncol = 3))
colnames(deregulated_genes) <- c("feature", "term", "omic layer")
for (i in 1:length(dereg_pathway_prot)) {
x1 <- network_prot[which(network_prot$term %in% dereg_pathway_prot[i]), c(1,2) ]
deregulated_genes <- rbind(deregulated_genes, x1)
}
network_prot[which(network_prot$term %in% dereg_pathway_prot[1]), c(1,2) ]
network_prot[which(network_prot$term %in% dereg_pathway_prot[2]), c(1,2) ]
length(dereg_pathway_prot)
network_prot$term
View(network_prot)
View(network_combined)
network_prot$term %in% dereg_pathway_prot
network_prot$term %in% dereg_pathway_prot[1]
which(network_prot[which(network_prot$term %in% dereg_pathway_prot[i]), c(1,2) ])
which(network_prot[which(network_prot$term %in% dereg_pathway_prot[1]), c(1,2) ])
which(network_prot$term %in% dereg_pathway_prot[i])
which(network_prot$term %in% dereg_pathway_prot[2])
which(network_prot$term %in% dereg_pathway_prot[3])
# filter manually
dereg_pathway_met <- pathway_select_met$pathway
dereg_pathway_prot<- pathway_select_prot$pathway
deregulated_metabs <- data.frame(matrix(ncol = 3))
colnames(deregulated_metabs) <- c("feature", "term", "omic layer")
deregulated_genes <- data.frame(matrix(ncol = 3))
colnames(deregulated_genes) <- c("feature", "term", "omic layer")
for (i in 1:length(dereg_pathway_prot)) {
x1 <- network_prot[which(network_prot$term %in% dereg_pathway_prot[i]), c(1,2) ]
deregulated_genes[,c(1,2)] <- rbind(deregulated_genes, x1)
}
# filter manually
dereg_pathway_met <- pathway_select_met$pathway
dereg_pathway_prot<- pathway_select_prot$pathway
deregulated_metabs <- data.frame(matrix(ncol = 3))
colnames(deregulated_metabs) <- c("feature", "term", "omic layer")
deregulated_genes <- data.frame(matrix(ncol = 3))
colnames(deregulated_genes) <- c("feature", "term", "omic layer")
for (i in 1:length(dereg_pathway_prot)) {
x1 <- network_prot[which(network_prot$term %in% dereg_pathway_prot[i]), c(1,2) ]
deregulated_genes[,c(1,2)] <- rbind(Deregulated_genes, x1)
}
View(deregulated_genes)
for (i in 1:length(dereg_pathway_prot)) {
x1 <- network_prot[which(network_prot$term %in% dereg_pathway_prot[i]), c(1,2) ]
deregulated_genes[,c(1,2)] <- rbind(deregulated_genes, x1)
}
x1
# filter manually
dereg_pathway_met <- pathway_select_met$pathway
dereg_pathway_prot<- pathway_select_prot$pathway
deregulated_metabs <- data.frame(matrix(ncol = 2))
colnames(deregulated_metabs) <- c("feature", "term")
deregulated_genes <- data.frame(matrix(ncol = 2))
dereg_pathway_met <- pathway_select_met$pathway
dereg_pathway_prot<- pathway_select_prot$pathway
deregulated_metabs <- data.frame(matrix(ncol = 2))
colnames(deregulated_metabs) <- c("feature", "term")
deregulated_genes <- data.frame(matrix(ncol = 2))
colnames(deregulated_genes) <- c("feature", "term")
for (i in 1:length(dereg_pathway_prot)) {
x1 <- network_prot[which(network_prot$term %in% dereg_pathway_prot[i]), c(1,2) ]
deregulated_genes <- rbind(deregulated_genes, x1)
}
View(deregulated_genes)
# filter manually
dereg_pathway_met <- pathway_select_met$pathway
dereg_pathway_prot<- pathway_select_prot$pathway
deregulated_metabs <- data.frame(matrix(ncol = 2))
colnames(deregulated_metabs) <- c("feature", "term")
deregulated_genes <- data.frame(matrix(ncol = 2))
colnames(deregulated_genes) <- c("feature", "term")
for (i in 1:length(dereg_pathway_prot)) {
x1 <- network_prot[which(network_prot$term %in% dereg_pathway_prot[i]), c(1,2) ]
deregulated_genes <- rbind(deregulated_genes, x1)
}
deregulated_genes <- deregulated_genes[-1,]
deregulated_genes$layer <- "proteomic"
for (i in 1:length(dereg_pathway_met)) {
x2 <- network_met[which(network_met$term %in% dereg_pathway_met[i]), c(1,2) ]
deregulated_metabs <- rbind(deregulated_metabs, x2)
}
deregulated_metabs <- deregulated_metabs[-1,]
deregulated_metabs$layer[,3] <- "metabolomic"
dereg_pathway_met <- pathway_select_met$pathway
dereg_pathway_prot<- pathway_select_prot$pathway
deregulated_metabs <- data.frame(matrix(ncol = 2))
colnames(deregulated_metabs) <- c("feature", "term")
deregulated_genes <- data.frame(matrix(ncol = 2))
colnames(deregulated_genes) <- c("feature", "term")
for (i in 1:length(dereg_pathway_prot)) {
x1 <- network_prot[which(network_prot$term %in% dereg_pathway_prot[i]), c(1,2) ]
deregulated_genes <- rbind(deregulated_genes, x1)
}
deregulated_genes <- deregulated_genes[-1,]
deregulated_genes$layer <- "proteomic"
for (i in 1:length(dereg_pathway_met)) {
x2 <- network_met[which(network_met$term %in% dereg_pathway_met[i]), c(1,2) ]
deregulated_metabs <- rbind(deregulated_metabs, x2)
}
deregulated_metabs <- deregulated_metabs[-1,]
deregulated_metabs$layer <- "metabolomic"
View(deregulated_metabs)
# filter manually
dereg_pathway_met <- pathway_select_met$pathway
dereg_pathway_prot<- pathway_select_prot$pathway
deregulated_metabs <- data.frame(matrix(ncol = 2))
colnames(deregulated_metabs) <- c("feature", "term")
deregulated_genes <- data.frame(matrix(ncol = 2))
colnames(deregulated_genes) <- c("feature", "term")
for (i in 1:length(dereg_pathway_prot)) {
x1 <- network_prot[which(network_prot$term %in% dereg_pathway_prot[i]), c(1,2) ]
deregulated_genes <- rbind(deregulated_genes, x1)
}
deregulated_genes <- deregulated_genes[-1,]
deregulated_genes$layer <- "proteomic"
for (i in 1:length(dereg_pathway_met)) {
x2 <- network_met[which(network_met$term %in% dereg_pathway_met[i]), c(1,2) ]
deregulated_metabs <- rbind(deregulated_metabs, x2)
}
deregulated_metabs <- deregulated_metabs[-1,]
deregulated_metabs$layer <- "metabolomic"
deregulated_genes_and_metabs <- rbind(deregulated_genes, deregulated_metabs)
saveRDS(deregulated_genes_and_metabs, "results/deregulated_genes_and_metabs.RDS")
library(cosmosR)
library(decoupleR)
library(dplyr)
library(tidyr)
library(pheatmap)
library(dendextend)
library(tidyverse)
library(ggrepel)
library(ggplot2)
library(readxl)
options(ggrepel.max.overlaps = Inf)
library(patchwork)
library(stringr)
detach("package:metaboliteIDmapping", unload = TRUE)
deregulated_genes_and_metabs <- readRDS("results/deregulated_genes_and_metabs.RDS")
# Load succesfull nodes
nodes_lung_full<- readRDS("results/nodes_ORA_lung_full.RData")
nodes_lung<- readRDS("results/nodes_ORA_lung.RData")
dereg_PEA_network <- deregulated_genes_and_metabs[deregulated_genes_and_metabs$feature %in% nodes_lung_full$sucesses, ]
# metab and prot
logFC_proteomics_z <- readRDS("results/logFC_proteomics_z.Rda")
logFC_metabolomics_z <- readRDS("results/logFC_metabolomics_z.Rda")
combined_metab_gene_hallmarks <- read_csv("support/combined_metab_gene_hallmarks.csv")
Biocrates_metabolite_identifier <- read_excel("support/Biocrates_metabolite_identifier.xlsx")
Biocrates_metabolite_identifier$feature <- gsub("[()/: -]",".",Biocrates_metabolite_identifier$feature)
##################################
# limma ttest
##################################
proteomics_t <- readRDS("results/proteomics_DE_t.Rda")
metabolomics_t <- readRDS("results/metabolomics_DE_t.Rda")
proteomics_t <- proteomics_t[,c(3,4, 6, 8 )]
proteomics_t <- proteomics_t[-which(proteomics_t$ID == "NA"),]
proteomics_t<- unique(proteomics_t)
proteomics_t <- proteomics_t %>%
group_by(ID) %>%
summarise_each(funs(mean))
proteomics_t <- proteomics_t %>%
drop_na() %>%
column_to_rownames("ID")
metabolomics_t <- metabolomics_t[,c(12, 3, 5, 7)]
metabolomics_t<- unique(metabolomics_t)
metabolomics_t <- metabolomics_t %>%
group_by(HMDB) %>%
summarise_each(funs(mean))
metabolomics_t <- metabolomics_t %>%
drop_na() %>%
column_to_rownames("HMDB")
######################################################################
combined_t <- rbind(metabolomics_t, proteomics_t)
######################################################################
metabolomics_t <- metabolomics_t %>%
rownames_to_column("HMDB")
metabolomics_t_map <- left_join(metabolomics_t, metabolitesMapping, by = "HMDB" )
metabolomics_t_map <-metabolomics_t_map %>%
select(HMDB, logFC, t, adj.P.Val, Name) %>%
unique()
metabolomics_t_map <- metabolomics_t_map[-which(is.na(metabolomics_t_map$Name) == T), ]
# only 4 HMDBs not annotated, these are:
metabolomics_t$HMDB[which(metabolomics_t$HMDB %in% metabolomics_t_map$HMDB == F)]
View(Biocrates_metabolite_identifier)
View(metabolomics_t)
View(metabolomics_t)
